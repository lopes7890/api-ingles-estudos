/* import puppeteer from "puppeteer";

let browser;

export const translateWords = async (text) => {
    try{

        //await browser.close();  
        console.log("Iniciando o Puppeteer...");
        if (!browser) {
            browser = await puppeteer.launch({
                headless: true, // Modo sem interface gráfica
                args: ['--no-sandbox', '--disable-setuid-sandbox'], // Necessário em alguns servidores
            });
        }


        console.log("Browser iniciado com sucesso.");

        const page = await browser.newPage()
        
        await page.setRequestInterception(true);
        page.on('request', (req) => {
            if(["image", "stylesheet", "font"].includes(req.resourceType())) {
                req.abort();
            } else {
                req.continue();
            }
        })

        await page.goto("https://translate.google.com.br/?sl=en&tl=pt&op=translate")
        
        console.log("Nova página criada.");

  // Aguarde o seletor
        await page.waitForSelector('#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > div > c-wiz > span > span > div > textarea'); 

  // Insira o texto a ser traduzido

        await page.type('#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > div > c-wiz > span > span > div > textarea', text);

  // Aguarde a tradução acontecer

        await page.waitForSelector('#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > c-wiz > div.QcsUad.BDJ8fb.sMVRZe.hCXDsb.wneUed > div.usGWQd > div > div.lRu31 > span.HwtZe > span > span');

  // Pega o texto traduzido
        const tradution = await page.evaluate(() => {
            return document.querySelector('#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > c-wiz > div.QcsUad.BDJ8fb.sMVRZe.hCXDsb.wneUed > div.usGWQd > div > div.lRu31 > span.HwtZe > span > span').textContent;
        });


        console.log(`Texto original: ${text}`);
        console.log(`Texto traduzido: ${tradution}`);

        await browser.close();  

        return tradution

    } catch (error) {
        return `erro ao traduzir`
    }

}

process.on('exit', async () => {
    if (browser) await browser.close();
  });

 */

import puppeteer from "puppeteer";

let browser; // Reutilizar a instância do browser
  
export const translateWordsPortuguese = async (texto) => {
    try {
      if (!browser) {
        browser = await puppeteer.launch({
          headless: true,
          args: ['--no-sandbox', '--disable-setuid-sandbox', '--disable-dev-shm-usage'],
        });
      }
  
      const page = await browser.newPage();
  
      // Bloqueia imagens e scripts
      await page.setRequestInterception(true);
      page.on('request', (req) => {
        if (["image", "stylesheet", "font"].includes(req.resourceType())) {
          req.abort();
        } else {
          req.continue();
        }
      });
  
      await page.goto("https://translate.google.com.br/?sl=en&tl=pt&op=translate");
  
      // Digita o texto e pega a tradução
      await page.type("#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > div > c-wiz > span > span > div > textarea", texto);
      await page.waitForSelector("#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > c-wiz > div.QcsUad.BDJ8fb.sMVRZe.hCXDsb.wneUed > div.usGWQd > div > div.lRu31 > span.HwtZe > span > span"); // Seletor da tradução
      const translation = await page.$eval("#yDmH0d > c-wiz > div > div.ToWKne > c-wiz > div.OlSOob > c-wiz > div.ccvoYb > div.AxqVh > div.OPPzxe > c-wiz > div.QcsUad.BDJ8fb.sMVRZe.hCXDsb.wneUed > div.usGWQd > div > div.lRu31 > span.HwtZe > span > span", (el) => el.textContent);
  
      console.log(`Texto original: ${texto}`);
      console.log(`Texto traduzido: ${translation}`);
  
      await page.close(); // Fecha a aba
  
      return translation;
    } catch (error) {
      console.error("Erro ao traduzir:", error);
      return "Erro ao traduzir o texto.";
    }
};
  
  // Fecha o browser ao final do processo
process.on('exit', async () => {
    if (browser) await browser.close();
});
  